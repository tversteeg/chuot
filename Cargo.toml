[package]
name = "chuot"
version = "0.0.1"
edition = "2021"
authors = ["Thomas Versteeg <t@versteeg.email>"]
license = "AGPL-3.0"
homepage = "https://github.com/tversteeg/chuot"
readme = "README.md"
description = "AGPL licensed and opinionated game engine for pixel-art games"
documentation = "https://docs.rs/chuot"
repository = "https://github.com/tversteeg/chuot.git"
keywords = ["gamedev", "utility"]
categories = [
	"games",
	"game-engines",
]
rust-version = "1.77.0"
include = ["/src", "build.rs", "/shaders"]

[package.metadata.docs.rs]
# Only enable features that actually expose APIs
features = ["dialogue"]
# Supported platforms
targets = [
	# Linux (X11 & Wayland)
	"x86_64-unknown-linux-gnu",
	# Web
	"wasm32-unknown-unknown",
	# Windows
	"x86_64-pc-windows-msvc",
	# MacOS
	"x86_64-apple-darwin",
]
rustdoc-args = ["--cfg", "docsrs"]

[features]
default = ["dialogue"]

# Embed all assets into the binary.
#
# If disabled loads all assets from disk.
# Mutually exclusive from `hot-reload-assets`.
embed-assets = ["chuot-macros/embed-assets"]

# Enable assets and hot-reload assets from disk when they are saved.
#
# Has no effect when building for the web.
# Mutually exclusive from `embed-assets`.
hot-reload-assets = ["chuot-macros/hot-reload-assets"]

# Integrate [Yarn Spinner](https://www.yarnspinner.dev/), a friendly DSL for writing dialogue.
dialogue = ["dep:yarnspinner"]

# Build for X11, only applicable on desktop.
#
# Wayland is always enabled.
x11 = ["winit/x11"]

# Show an in-game profiler
in-game-profiler = [
	"profiling/profile-with-puffin",
	"dep:egui",
	"dep:egui-wgpu",
	"dep:egui-winit",
	"dep:puffin_egui",
	"dep:puffin",
	"dep:stats_alloc",
]

[dependencies]
chuot-macros = { path = "crates/macros", version = "0.1.0" }
chuot-packer = { path = "crates/packer", version = "0.1.0" }

miette = "7.2.0"
serde = { version = "1.0.199", features = ["derive"] }
serde-untagged = "0.1.5"
bytemuck = { version = "1.15.0", features = ["derive"] }
log = "0.4.21"
hashbrown = "0.14.5"
png = "0.17.13"
profiling = "1.0.15"
winit = { version = "0.29.15", default-features = false, features = ["rwh_06", "wayland", "wayland-dlopen"] }
winit_input_helper = "0.16.0"
glam = { version = "0.27", features = ["bytemuck", "fast-math"] }
glamour = { version = "0.11.1", features = ["serde"] }
smol_str = "0.2.1"
fastrand = "2.1.0"
web-time = "1.1.0"
kira = { version = "0.8.7", default-features = false, features = ["cpal", "ogg", "serde"] }
imgref = "1.10.1"
toml = "0.8.12"
downcast-rs = "1.2.1"

# `dialogue` feature

yarnspinner = { version = "0.2.0", optional = true }

# `in-game-profiler` feature

egui = { version = "0.27.2", features = ["default_fonts"], optional = true }
egui-wgpu = { version = "0.27.2", optional = true }
egui-winit = { version = "0.27.2", default-features = false, features = ["wayland"], optional = true }
puffin_egui = { version = "0.27.0", optional = true }
stats_alloc = { version = "0.1.10", optional = true }

# Dependencies specifically for desktop
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
wgpu = "0.20.0"
pollster = "0.3.0"
env_logger = "0.11.3"

# `in-game-profiler` feature

puffin = { version = "0.19.0", optional = true }

# Dependencies specifically for WASM
[target.'cfg(target_arch = "wasm32")'.dependencies]
# Not used directly but the JS feature is required by the 'ahash' feature in `assets_manager`
getrandom = { version = "0.2", features = ["js"] }
wgpu = { version = "0.20.0", default-features = false, features = ["webgl", "wgsl", "fragile-send-sync-non-atomic-wasm"] }
console_log = "1.0.0"
web-sys = { version = "0.3.69", features = ["Document", "Window", "Element"] }
wasm-bindgen = "0.2.92"
wasm-bindgen-futures = "0.4.42"
console_error_panic_hook = "0.1.7"

# `in-game-profiler` feature

puffin = { version = "0.19.0", features = ["web"], optional = true }

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
# Show nice output for the examples
miette = { version = "7.2.0", features = ["fancy"] }

[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
# Show nice output for the examples
miette = { version = "7.2.0", features = ["fancy-no-syscall"] }

[build-dependencies]
naga = { version = "0.20.0", features = ["wgsl-in", "wgsl-out"] }
wgsl-minifier = "0.4.1"

[workspace]
members = ["crates/macros", "crates/packer", "run-wasm"]

# Ensure audio performance is not too poor when running in dev mode
[profile.dev.package]
png.opt-level = 3
kira.opt-level = 3
cpal.opt-level = 3
symphonia.opt-level = 3
symphonia-format-ogg.opt-level = 3
symphonia-codec-vorbis.opt-level = 3

# Create small WASM binaries
[profile.release]
panic = "abort"
codegen-units = 1
opt-level = "z"
lto = true
strip = true
